<?xml version="1.0"?>
<xsd:schema xmlns="http://www.fpml.org/2009/FpML-4-7" xmlns:xsd="http://www.w3.org/2001/XMLSchema" version="SW_20_1_460930" targetNamespace="http://www.fpml.org/2009/FpML-4-7" elementFormDefault="qualified" attributeFormDefault="unqualified">
<xsd:include schemaLocation="fpml-main-4-7.xsd"/>
<xsd:include schemaLocation="swml-enum-4-7.xsd"/>
<xsd:include schemaLocation="swml-reporting-1-0.xsd"/>
<xsd:complexType name="SW_AdditionalField">
<xsd:annotation>
<xsd:documentation xml:lang="en">The data captured through the SwapsWire Trader fields labeled Additional Field 1-80 (or the custom labels chosen by a participant). The element carries a sequence attribute which will have values '1' through '80' to indicate the particular screen field where the data was captured. A fieldName attribute will have a value set equal to the SwapsWire Trader field's screen label.</xsd:documentation>
</xsd:annotation>
<xsd:simpleContent>
<xsd:extension base="xsd:normalizedString">
<xsd:attribute name="sequence" use="required">
<xsd:simpleType>
<xsd:restriction base="xsd:integer">
<xsd:minInclusive value="1"/>
<xsd:maxInclusive value="80"/>
</xsd:restriction>
</xsd:simpleType>
</xsd:attribute>
<xsd:attribute name="fieldName" type="xsd:normalizedString" use="required"/>
</xsd:extension>
</xsd:simpleContent>
</xsd:complexType>
<xsd:complexType name="SW_Allocations">
<xsd:sequence>
<xsd:element name="swAllocation" type="SW_Allocation" maxOccurs="unbounded"/>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_Allocation">
<xsd:annotation>
<xsd:documentation xml:lang="en">An entity for defining details of an individual allocation split.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="tradeId" type="xsd:normalizedString" minOccurs="0"/>
<xsd:choice>
<xsd:sequence>
<xsd:element name="swStreamReference" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a swapStream defined elsewhere in the document. For a fixed/float interest rate swap this will reference the fixed stream.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="payerPartyReference" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="receiverPartyReference" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
<xsd:sequence>
<xsd:element name="buyerPartyReference" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. The party referenced is the buyer on the allocation.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="sellerPartyReference" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. The party referenced is the seller on the allocation.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:choice>
<xsd:choice>
<xsd:element name="allocatedNotional" type="Money">
<xsd:annotation>
<xsd:documentation xml:lang="en">The notional amount applicable to the allocation. This is an FpML 4.3 element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swAllocatedNumberOfOptions" type="xsd:nonNegativeInteger">
<xsd:annotation>
<xsd:documentation xml:lang="en">The number of options applicable to the allocation.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:sequence>
<xsd:element name="swAllocatedVegaNotional" type="xsd:decimal">
<xsd:annotation>
<xsd:documentation xml:lang="en">The vega notional amount applicable to the allocation.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swAllocatedVarianceAmount" type="xsd:decimal">
<xsd:annotation>
<xsd:documentation xml:lang="en">The variance amount applicable to the allocation.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
<xsd:element name="swAllocatedUnits" type="xsd:decimal">
<xsd:annotation>
<xsd:documentation xml:lang="en">The number of shares or index units applicable to the allocation in respect of a Share Dividend Swap, Index Dividend Swap, Equity Share Swap or Equity Index Swap transaction.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:choice>
<xsd:element name="independentAmount" type="IndependentAmount" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Specifies an independent amount applicable to the allocation.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swAllocationIndependentAmountPercentage" type="xsd:decimal" minOccurs="0"/>
<xsd:element name="additionalPayment" type="SW_AllocationPayment" minOccurs="0" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation xml:lang="en">Additional payment between the principal parties involved in the trade.  In this context the element carries a seq attribute that will have a value of '1' or '2' to indicate to which additionalPayment child element within the FpML trade structure that the allocated payment corresponds. This element will also carry an informational directionReversed attribute that will have a value of 'true' only when the pay/receive direction of the additional payment on the allocation with respect to the parties is the reverse of that on the block trade. The directionReversed attribute will not otherwise be present.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swPrivateTradeId" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The trade identifier allocated internally by the participant. This is the internal identifier that will be passed to a clearance system, e.g. LCH.Clearnet SwapClear.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swSalesCredit" type="xsd:decimal" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The data captured through the SwapsWire Trader field labeled Sales Credit.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swAdditionalField" type="SW_AdditionalField" minOccurs="0" maxOccurs="80">
<xsd:annotation>
<xsd:documentation xml:lang="en">The data captured through the SwapsWire Trader fields labeled Additional Field 1-80 (or the custom labels chosen by a participant). The element carries a sequence attribute which will have values '1' through '80' to indicate the particular screen field where the data was captured. A fieldName attribute will have a value set equal to the SwapsWire Trader field's screen label.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swAllocationReportingDetails" type="SW_AllocationReportingDetails" minOccurs="0" maxOccurs="unbounded"/>
</xsd:sequence>
<xsd:attribute name="directionReversed" default="false">
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="true"/>
<xsd:enumeration value="false"/>
</xsd:restriction>
</xsd:simpleType>
</xsd:attribute>
</xsd:complexType>
<xsd:complexType name="SW_AllocationPayment">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component for defining allocation additional payments. This component is based on the FpML complex type Payment.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:group ref="PayerReceiver.model"/>
<xsd:element name="paymentAmount" type="Money">
<xsd:annotation>
<xsd:documentation xml:lang="en">The currency amount of the payment.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="paymentDate" type="AdjustableDate" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The payment date. This date is subject to adjustment in accordance with any applicable business day convention.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="paymentType" type="xsd:string" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">A classification of the type of fee or additional payment, e.g. brokerage, upfront fee etc. The paymentType element will contain the literal string entered into the SwapsWire Trader additional payment 'reason' screen entry field, except in the case of a trade cancellation when it will contain the reserved literal value 'Cancellation'. If the 'reason' screen entry field is left empty then this element will not be present.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="seq">
<xsd:simpleType>
<xsd:restriction base="xsd:NMTOKEN">
<xsd:enumeration value="1"/>
<xsd:enumeration value="2"/>
</xsd:restriction>
</xsd:simpleType>
</xsd:attribute>
<xsd:attribute name="directionReversed" type="xsd:boolean"/>
</xsd:complexType>
<xsd:complexType name="SW_Bond">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component for defining instrument identifiers, the coupon rate and maturity date associated with a fixed income security.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="instrumentId" type="InstrumentId" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation xml:lang="en">One or more identifiers for the instrument. This may include an ISIN, CUSIP or a market standard identifier for the reference entity and obligation pair.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="couponRate" type="xsd:decimal" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Specifies the coupon rate (expressed in percentage) of a fixed income security. This element may contain a negative value, for example, in the case of a floating rate security where the couponRate element contains a negative floating rate spread rate.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="maturity" type="xsd:date" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The date when the principal amount of a security becomes due and payable. This element will not be present if there is no maturity date associated with the fixed income security, for example, in the case of a perpetual bond.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_Broker">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component for defining information about a broker participant organization.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swParticipantId" type="SW_ParticipantId">
<xsd:annotation>
<xsd:documentation xml:lang="en">The name of the SwapsWire participant organization that the user belongs to. This name takes the form of a short mnemonic code.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="id" type="xsd:ID" use="required"/>
</xsd:complexType>
<xsd:complexType name="SW_Clearing">
<xsd:annotation>
<xsd:documentation xml:lang="en">An entity for defining data relating to the clearing of a trade through a central clearing house or clearing system, e.g. LCH.Clearnet's SwapClear service.</xsd:documentation>
</xsd:annotation>
<xsd:choice>
<xsd:sequence>
<xsd:element name="swEligibleForClearing" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation xml:lang="en">A true/false flag to indicate whether the trade is eligible for clearing through a central clearing house or clearing system via an interface from SwapsWire. The eligibility is determined based on eligibility rules held within SwapsWire and is not a guarantee of subsequent acceptance by the clearance system. The clearance system may apply additional acceptance criteria prior to registration of the trade. Currently, clearing is only available for Single Currency Interest Rate Swaps via LCH.Clearnet's SwapClear service and therefore this is the only product type where this element will be present. This element will not be present on a trade with a 'Clearing' trade status.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swSendForClearing" type="xsd:boolean" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">A true/false flag set by the participant to indicate that they are ready and willing (or not as the case may be) to allow the trade to be sent for clearing. This element can only be set to true by a participant if the trade is eligible for clearing as determined by SwapsWire's clearing eligibility rules, i.e. it is not possible for this element to contain a value of true if the element swEligibleForClearing contains a value of false. This element will not be present on a trade with a 'Clearing' trade status.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swSendForClearingTimestamp" type="xsd:dateTime" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The timestamp associated with the swSendForClearing element value last being updated. This element will not be present on a trade with a 'Clearing' trade status.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
<xsd:element name="swClearingTradeId" type="xsd:normalizedString">
<xsd:annotation>
<xsd:documentation xml:lang="en">The trade identifier allocated by the clearance system, e.g. LCH.Clearnet's SwapClear service, on successful registration of a trade sent for clearing via SwapsWire. This element will only be present for a trade with a trade status of 'Clearing' and a private process state of 'Released'.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:choice>
</xsd:complexType>
<xsd:complexType name="SW_ConfirmedNovationAgreement">
<xsd:annotation>
<xsd:documentation xml:lang="en">An entity for defining the terms of a Novation Agreement and any related fee associated with the transfer of the trade.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="eventId" type="EventId">
<xsd:annotation>
<xsd:documentation xml:lang="en">Specifies an identifier for the Novation Agreement. This is an FpML 4.1 element. This Novation identifier can be used in the SwapsWire Tracker application to perform a search for the Old and New Transactions associated with the novation.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:sequence>
<xsd:element name="oldTransactionReference" type="PartyTradeIdentifiers" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Indicates a reference to the original trade (Old Transaction) between the Transferor and the Remaining Party in a three-way novation or between Transferor 1 and Transferor 2 in a four-way novation. This is an FpML 4.1 element. The reference will be the SwapsWire trade identifier of the Old Transaction. This element will only be present in the SWML for a party that is party to the Old Transaction.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="newTransactionReference" type="PartyTradeIdentifiers" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Indicates a reference to the new trade (New Transaction) between the Transferee and the Remaining Party in a three-way novation or between Transferee 1 and Transferee 2 in a four-way novation. This is an FpML 4.1 element. The reference will be the SwapsWire trade identifier of the New Transaction. This element will only be present in the SWML for a party that is party to the New Transaction.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="transferor" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. In a three-way novation the party referenced is the Transferor (outgoing party) in the novation. The Transferor means a party which transfers by novation to a Transferee all of its rights, liabilities, duties and obligations with respect to a Remaining Party. In a four-way novation the party referenced is Transferor 1 which transfers by novation to Transferee 1 all of its rights, liabilities, duties and obligations with respect to Transferor 2. ISDA 2004 Novation Term: Transferor (three-way novation) or Transferor 1 (four-way novation). This is an FpML 4.1 element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="transferee" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. In a three-way novation the party referenced is the Transferee (incoming party) in the novation. Transferee means a party which accepts by way of novation all rights, liabilities, duties and obligations of a Transferor with respect to a Remaining Party. In a four-way novation the party referenced is Transferee 1 which accepts by way of novation the rights, liabilities, duties and obligations of Transferor 1. ISDA 2004 Novation Term: Transferee (three-way novation) or Transferee 1 (four-way novation). This is an FpML 4.1 element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="remainingParty" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. In a three-way novation the party referenced is the Remaining Party in the novation. Remaining Party means a party which consents to a Transferor's transfer by novation and the acceptance thereof by the Transferee of all of the Transferor's rights, liabilities, duties and obligations with respect to such Remaining Party under and with respect of the Novated Amount of a transaction. In a four-way novation the party referenced is Transferor 2 per the ISDA definition and acts in the role of a Transferor. Transferor 2 transfers by novation to Transferee 2 all of its rights, liabilities, duties and obligations with respect to Transferor 1. ISDA 2004 Novation Term: Remaining Party (three-way novation) or Transferor 2 (four-way novation). This is an FpML 4.1 element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="otherRemainingParty" type="PartyOrTradeSideReference" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. This element is not applicable in a three-way novation and should be omitted. In a four-way novation the party referenced is Transferee 2. Transferee 2 means a party which accepts by way of novation the rights, liabilities, duties and obligations of Transferor 2. ISDA 2004 Novation Term: Transferee 2 (four-way novation). This is an FpML 4.1 element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="novationDate" type="xsd:date">
<xsd:annotation>
<xsd:documentation xml:lang="en">Specifies the date that one party's rights, liabilities, duties and obligations with regard to the Old Transaction are transferred to another party. ISDA 2004 Novation Term: Novation Date. This is an FpML 4.1 element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="novationTradeDate" type="xsd:date">
<xsd:annotation>
<xsd:documentation xml:lang="en">Specifies the date the parties enter into a Novation Transaction. ISDA 2004 Novation Term: Novation Trade Date. This is an FpML 4.1 element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:choice>
<xsd:element name="novatedAmount" type="Money">
<xsd:annotation>
<xsd:documentation xml:lang="en">This represents the portion of the Old Transaction being novated. ISDA 2004 Novation Term: Novated Amount. This is an FpML 4.1 element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="novatedNumberOfOptions" type="xsd:nonNegativeInteger">
<xsd:annotation>
<xsd:documentation xml:lang="en">This represents the portion of the Old Transaction being novated. ISDA 2004 Novation Term: Novated Number of Options. This is an FpML 4.1 element. </xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swNovatedUnits" type="xsd:nonNegativeInteger">
<xsd:annotation>
<xsd:documentation xml:lang="en">This represents the Number of Shares or the Number of Units of the Old Transaction being novated in respect of an Index Dividend Swap, Equity Index Swap, Share Dividend Swap or Equity Share Swap transaction.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="novatedVarianceAmount" type="xsd:decimal">
<xsd:annotation>
<xsd:documentation xml:lang="en">This represents the portion of the Old Transaction being novated. ISDA 2004 Novation Term: Novated Variance Amount. This is an FpML 4.1 element. </xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:choice>
<xsd:element name="fullFirstCalculationPeriod" type="xsd:boolean" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">A true/false flag to indicate whether Full First Calculation Period is applicable to the New Transaction arising from a novation. Full First Calculation Period relates to initial cashflow accruals for payment by each party on the first Payment Date following a novation and is defined in the 2004 ISDA Novation Definitions. ISDA 2004 Novation Term: Full First Calculation Period. This element will not be present on a Swaption novation. This is an FpML 4.1 element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="firstPeriodStartDate" type="FirstPeriodStartDate" minOccurs="0" maxOccurs="2">
<xsd:annotation>
<xsd:documentation xml:lang="en">This element will occur zero or two times. This element will not be present on a Swaption novation. Each element has an href attribute that is a pointer style reference to a party identified elsewhere in the document. This date represents the commencement date of the initial Calculation Period with respect to the initial Fixed Rate Payer Payment Date or the initial Floating Rate Payer Payment Date on the New Transaction as the case may be for the party referenced. For a trade with a trade status of 'New-Novated' these dates will also corrrespond to the //swapStream/calculationPeriodDates/effectiveDate/unadjustedDate in the relevant fixed and floating streams. This is an FpML 4.1 element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="nonReliance" type="Empty" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The presence of this empty element indicates that Non-Reliance is applicable to the Novation Transaction per the 2004 ISDA Novation Definitions. ISDA 2004 Novation Term: Non-Reliance. This is an FpML 4.1 element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swNovationExecutionUniqueTransactionId" type="SW_UniqueTradeIdentifier" minOccurs="0" maxOccurs="1">
<xsd:annotation>
<xsd:documentation>This bilateral element represents Novation Execution Trade USI. This USI will be entered by Transferor or Transferee representing the Novation Execution (or Novation Fee) trade. This element will be visible to Remaining Party.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
<xsd:element name="payment" type="Payment" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Specifies the fee, if any, exchanged between the Transferor and Transferee in a three-way novation or between Transferor 1 and Transferee 1 in a four-way novation with respect to the transfer of the trade. This is an FpML 4.1 element. This payment element will only be present in the SWML for the parties to the Novation Transaction that are also parties to the fee. For example, this element would not be visible to the Remaining Party in a three-way novation.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_CreditDefaultSwap">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component to capture private data specific to the CDS product type, primarily the internal reference entity and reference obligation paired up with the bilateral reference information.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swAgreePrimaryMismatch" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation xml:lang="en">A true/false flag which reflects the value captured in the SwapsWire Trader field 'Agree to Primary Mismatch'.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swAgreeSecondaryMismatch" type="xsd:boolean">
<xsd:annotation>
<xsd:documentation xml:lang="en">A true/false flag which reflects the value captured in the SwapsWire Trader field 'Agree to Secondary Mismatch'.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swPrivateReferenceInformation" type="SW_PrivateReferenceInformation" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Internal reference entity and reference obligation that has been paired up with the bilateral reference information.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_CustomerTransaction">
<xsd:annotation>
<xsd:documentation>Sets out which parties are the client and prime broker on the trade.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swCustomer" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the SWML document. This is an FpML element. The party referenced is the customer.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swPrimeBroker" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the SWML document. This is an FpML element. The party referenced is the prime broker.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swEarlyTerminationProvision" type="SW_EarlyTerminationProvision" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Optional early termination provisions between the Prime Broker and the Customer.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_DeltaCross">
<xsd:annotation>
<xsd:documentation>A type allowing delta crosses to be recorded on a deal</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="buyerPartyReference" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation>The buying party</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="sellerPartyReference" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation>The selling party</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:choice>
<xsd:element name="equity" type="EquityAsset">
<xsd:annotation>
<xsd:documentation>The underlying of the option trade, which is being crossed to hedge the deal.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="future" type="Future">
<xsd:annotation>
<xsd:documentation>The underlying of the option trade, which is being crossed to hedge the deal.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:choice>
<xsd:element name="swPrice" type="Money">
<xsd:annotation>
<xsd:documentation>The price of the underlying being crossed.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swQuantity" type="xsd:decimal">
<xsd:annotation>
<xsd:documentation>The number of underlying instruments being crossed.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swDelta" type="xsd:decimal" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The percentage delta hedge achieved.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swOffshoreCross" type="SW_OffshoreCross" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Indicates that the delta on a trade has been executed in a location other than the one where the underlying is listed. For example, an option on a Hong Kong underlyer is crossed in London.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swCrossExchangeId" type="ExchangeId" minOccurs="0">
<xsd:annotation>
<xsd:documentation>The exchange where the underlying share is being crossed.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swDeltaStrategyLeg" type="xsd:decimal" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Indicates the leg of a strategy trade to which the delta cross has been applied.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swDeltaStrategyQuantity" type="xsd:decimal" minOccurs="0">
<xsd:annotation>
<xsd:documentation>Indicates the number of options used to calculate the delta cross values. This will reflect the number of options on the leg of the strategy trade indicated in the swDeltaStrategyLeg element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_Dialog">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component for defining the set of conversation dialogs recording the conversation that took place on the trade.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swDialogId" type="xsd:normalizedString">
<xsd:annotation>
<xsd:documentation xml:lang="en">The reference identifier associated with a sequence of messages in a conversation.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swTraderMessage" type="SW_TraderMessage" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation xml:lang="en">Details of a message sent between SwapsWire participants/users.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_FixedAmounts">
<xsd:annotation>
<xsd:documentation xml:lang="en">An entity for defining fixed rate payer and receiver parties.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="payerPartyReference" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. This is an FpML 2.0 element. The party referenced is the fixed rate payer on the Swap.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="receiverPartyReference" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. This is an FpML 2.0 element. The party referenced is the fixed rate receiver on the Swap.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_AssociatedFuture">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component for defining details of any future being crossed on a Swap Transaction. For some markets, e.g. GBP, EUR and CHF, it is possible for either side to cross up to two futures against an interest rate swap in order to hedge the trade.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swFutureName" type="xsd:normalizedString">
<xsd:annotation>
<xsd:documentation xml:lang="en">An identifier for the future. The valid values depend on the currency of the Swap Transaction. For a GBP denominated transaction the value 'Gilt' is valid. For EUR and CHF denominated swaps the values 'Bund', 'Bobl', 'Buxl' or 'Schatz' are valid.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swQuantity" type="xsd:positiveInteger">
<xsd:annotation>
<xsd:documentation xml:lang="en">The number of futures contracts being crossed.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swMaturity" type="xsd:date">
<xsd:annotation>
<xsd:documentation xml:lang="en">The maturity date of the futures contract being crossed.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swPrice" type="xsd:decimal">
<xsd:annotation>
<xsd:documentation xml:lang="en">The price per contract for the futures contract being crossed.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="href" type="xsd:IDREF" use="required"/>
</xsd:complexType>
<xsd:complexType name="SW_EarlyTerminationProvision">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component for defining limited early termination provision information relating to the Swap Transaction. Both Mandatory and Optional Early Termination are supported.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:choice>
<xsd:element name="swBreakFirstDate" type="Period">
<xsd:annotation>
<xsd:documentation xml:lang="en">.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swBreakOverrideFirstDate" type="xsd:date">
<xsd:annotation>
<xsd:documentation xml:lang="en">.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:choice>
<xsd:element name="swBreakFrequency" type="Period" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swBreakCalculationMethod" type="SW_BreakCalculationMethodEnum" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_GiveUp">
<xsd:annotation>
<xsd:documentation xml:lang="en">The swGiveUp element captures details specific to Prime Brokerage, and defines a tri-party agreement on the primary prime-brokered trade.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swEligiblePrimeBrokerTrade" type="xsd:boolean" minOccurs="0">
<xsd:annotation>
<xsd:documentation>A flag to specify whether or not a prime-brokerd trade is eligible under the user-defined rules stored in the SwapsWire system. If no rules have been defined, this element will not be present.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swCustomerTransaction" type="SW_CustomerTransaction">
<xsd:annotation>
<xsd:documentation>Sets out which parties are the client and prime broker on the trade.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swInterDealerTransaction" type="SW_InterDealerTransaction">
<xsd:annotation>
<xsd:documentation>Sets out which parties are the executing dealer and prime broker on the trade.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_Header">
<xsd:annotation>
<xsd:documentation xml:lang="en">An entity for defining information about the transaction including the trade id and version, trade source, the parties to the transaction and transaction state information.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="tradeId" type="xsd:normalizedString">
<xsd:annotation>
<xsd:documentation xml:lang="en">A trade reference identifier allocated by SwapsWire. This is an FpML 2.0 element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swTradeVersionId" type="xsd:normalizedString">
<xsd:annotation>
<xsd:documentation xml:lang="en">The bilateral trade version id.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swTradeVersionTimestamp" type="xsd:dateTime">
<xsd:annotation>
<xsd:documentation xml:lang="en">The timestamp associated with the trade version. For Amended and Cancelled trade states this represents the amendment and cancellation effective date.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swTradeStatus" type="SW_TradeStatusEnum">
<xsd:annotation>
<xsd:documentation xml:lang="en">The bilateral trade (or contract) state. This field is set by the SwapsWire system. Not all states are applicable to all product types.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swAmendmentType" type="SW_AmendmentTypeEnum" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">This field will detail the reason for any amendment to simplify downstream processing.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swTradeSource" type="SW_TradeSourceEnum">
<xsd:annotation>
<xsd:documentation xml:lang="en">The original source of the trade, e.g. whether entered manually into SwapsWire, interfaced from a voice or electronic broker/platform etc.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swVenueId" type="SW_VenueId" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The venue Identifier e.g. Pre-LEI </xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swOriginatorPartyReference" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. The party referenced entered the deal into the SwapsWire system in the case of a 'direct' deal, i.e. if the element swTradeSource contains the value 'SwapsWireOffline'. In the case of a 'brokered' deal the SwapsWire system will arbitrarily identify one of the principal parties to the trade as the originating party when the broker initially submits the deal and this designation only then has relevance when using the Dealer API.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:choice minOccurs="0">
<xsd:element name="swReplacedTradeId" type="xsd:normalizedString">
<xsd:annotation>
<xsd:documentation xml:lang="en">When two trades are successfully matched in SwapsWire one trade is carried forward as the 'survivor' trade and the other trade is 'withdrawn' by SwapsWire (the 'replaced' trade). The survivor trade preserves its SwapsWire trade identifier. The survivor trade will contain the swReplacedTradeId element which will contain the SwapsWire trade identifier of the replaced trade.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swReplacedByTradeId" type="xsd:normalizedString">
<xsd:annotation>
<xsd:documentation xml:lang="en">When two trades are successfully matched in SwapsWire one trade is carried forward as the 'survivor' trade and the other trade is 'withdrawn' by SwapsWire (the 'replaced' trade). The survivor trade preserves its SwapsWire trade identifier. The survivor trade will contain the swReplacedTradeId element which will contain the SwapsWire trade identifier of the replaced trade.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:choice>
<xsd:element name="swGiveUpTradeId" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">For a trade with a trade status of New-PrimeBrokered contains the SwapsWire trade identifier of the corresponding trade with a trade status of PrimeBrokereded.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swBlockTradeId" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">For a trade with a trade status of New-Allocation (an allocation child trade) contains the SwapsWire trade identifier of the corresponding trade with a trade status of Allocated (the allocation block trade).</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swBlockCancelTradeId" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">For a trade with a trade status of Cancelled that was cancelled using the block cancel process contains the SwapsWire trade identifier of the corresponding block cancel trade.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swBreakBlockTradeId" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation>For a Dividend Swap Trade, if the trade is broken out from a parent each child will display that parent trade ID in this element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swExecutingDealerReference" type="PartyOrTradeSideReference" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. The party referenced is the executing dealer on a prime brokered trade. This element will only ever be present on a trade with a trade status of New-PrimeBrokered.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swNegotiationParties" type="SW_NegotiationParties">
<xsd:annotation>
<xsd:documentation xml:lang="en">Information that identifies the SwapsWire participants/users that were involved in the trade conversation. At least two SwapsWire Trader users will be specified, but there may be more if the trade is transferred to an additional user or users during the conversation. For a brokered deal the broker participant will also be identified.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swRoutingInformation" type="SW_RoutingUserDetails" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Container to hold any routing information associated with the message.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_RoutingUserDetails">
<xsd:sequence>
<xsd:element name="swUser">
<xsd:annotation>
<xsd:documentation xml:lang="en">Container to hold user details.</xsd:documentation>
</xsd:annotation>
<xsd:complexType>
<xsd:sequence>
<xsd:element name="swUserId" type="xsd:normalizedString">
<xsd:annotation>
<xsd:documentation xml:lang="en">The user ID of the user the MQ is configured against.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swUserName" type="xsd:normalizedString">
<xsd:annotation>
<xsd:documentation xml:lang="en">The user name of the user the MQ is configured against.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_InterDealerTransaction">
<xsd:annotation>
<xsd:documentation>Sets out which parties are the executing dealer and prime broker on the trade.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swExecutingDealer" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the SWML document. This is an FpML element. The party referenced is the executing dealer.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swPrimeBroker" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the SWML document. This is an FpML element. The party referenced is the prime broker.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swEarlyTerminationProvision" type="SW_EarlyTerminationProvision" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Optional early termination provisions between the Executing Broker and the Prime Broker.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_Negotiation">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component for defining the set of dialogs reflecting the conversation that took place on the trade.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swDialog" type="SW_Dialog" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation xml:lang="en">A sequence of one or more messages from one participant/user to another. All of the messages in a conversation share a common dialog identifier.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_Normalisation">
<xsd:annotation>
<xsd:documentation xml:lang="en">An entity for defining original (pre-normalised) values for the trade date, effective date and termination date when a swap trade has been normalised as part of a backloading submission to SwapsWire, typically with the aim of backloading through to LCH.Clearnet's SwapClear service.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swNormalisationDate">
<xsd:annotation>
<xsd:documentation xml:lang="en">The date used in the normalisation algorithm. This is also the nominal target registration date at the clearing house.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swOriginalTradeDate">
<xsd:annotation>
<xsd:documentation xml:lang="en">The original (pre-normalised) trade date.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swOriginalEffectiveDate">
<xsd:annotation>
<xsd:documentation xml:lang="en">The original (pre-normalised) effective date.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swOriginalTerminationDate">
<xsd:annotation>
<xsd:documentation xml:lang="en">The original (pre-normalised) termination date.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_NegotiationParties">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component for defining the SwapsWire users or broker participants involved in the trade negotiation.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swTrader" type="SW_Trader" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation xml:lang="en">Information describing one SwapsWire user involved in the trade conversation.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swBroker" type="SW_Broker" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Information describing one broker participant involved in the trade negotiation. This element will only be present for a new brokered trade.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_NegotiationPartyReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A reference to a swTrader or swBroker element within the SWML document.</xsd:documentation>
</xsd:annotation>
<xsd:attribute name="href" type="xsd:IDREF" use="required"/>
</xsd:complexType>
<xsd:complexType name="SW_VenueId">
<xsd:annotation>
<xsd:documentation xml:lang="en">A type to define the venue identifier issuer. The Venue Id Scheme is used to identify the source of the Id and determines the Issuer/Id  values used for Clearing and Reporting.</xsd:documentation>
</xsd:annotation>
<xsd:simpleContent>
<xsd:extension base="xsd:normalizedString">
<xsd:attribute name="swVenueIdScheme" type="xsd:anyURI"/>
</xsd:extension>
</xsd:simpleContent>
</xsd:complexType>
<xsd:complexType name="SW_ParticipantId">
<xsd:annotation>
<xsd:documentation xml:lang="en">A code for identification of participant organizations operating on SwapsWire.</xsd:documentation>
</xsd:annotation>
<xsd:simpleContent>
<xsd:extension base="xsd:normalizedString">
<xsd:attribute name="swParticipantIdScheme" type="xsd:anyURI" default="http://www.swapswire.com/spec/2001/participant-id-1-0"/>
</xsd:extension>
</xsd:simpleContent>
</xsd:complexType>
<xsd:complexType name="SW_OffshoreCross">
<xsd:annotation>
<xsd:documentation>Indicates that the delta on a trade has been executed in a location other than the one  where the underlying is listed. For example, an option on a Hong Kong underlyer is crossed in London.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swOffshoreCrossLocation" type="BusinessCenter">
<xsd:annotation>
<xsd:documentation>Captures the location of the Offshore Delta Cross</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_OptionalEarlyTermination">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component for defining limited information for an Optional Early Termination relating to the Swap Transaction.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swOptionalEarlyTerminationDate" type="Period">
<xsd:annotation>
<xsd:documentation xml:lang="en">The earliest ISDA Optional Early Termination Date expressed as a date offset. For example, 5 years.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swOptionalEarlyTerminationFrequency" type="Period" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Optional early termination frequency.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_Payment">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component for defining additional payments. This component is based on the FpML complex type Payment.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:group ref="PayerReceiver.model"/>
<xsd:element name="paymentAmount" type="Money">
<xsd:annotation>
<xsd:documentation xml:lang="en">The currency amount of the payment.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="paymentDate" type="AdjustableDate" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The payment date. This date is subject to adjustment in accordance with any applicable business day convention.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="paymentType" type="xsd:string" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">A classification of the type of fee or additional payment, e.g. brokerage, upfront fee etc. The paymentType element will contain the literal string entered into the SwapsWire Trader additional payment 'reason' screen entry field, except in the case of a trade cancellation when it will contain the reserved literal value 'Cancellation'. If the 'reason' screen entry field is left empty then this element will not be present.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_PrivateData">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component for defining data which is private to an individual side (party) of the trade. The private data consists of a mixture of process state information and private data entered/displayed in the SwapsWire Trader application, e.g. trading book identifier.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="partyReference" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. This is an FpML element. The private data is associated with the party referenced.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swSideId" type="xsd:nonNegativeInteger" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The side identifier allocated by the SwapsWire system.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swPrivateDataVersionId" type="xsd:nonNegativeInteger">
<xsd:annotation>
<xsd:documentation xml:lang="en">The version identifier associated with the unilateral private data. The version is set by the SwapsWire system.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swPrivateDealVersionHandle" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The deal version handler of this version of the deal. The DVH is set by the MarkitWire system.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swMinorVersion" type="xsd:integer" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The minor version number set by the MartkitWire System.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swPreviousDealVersionHandle" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The Deal Version Handler of the previous deal version, if available. This is set by the MarkitWire system.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swNewState" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The new state of the deal. This is set by the MarkitWire system.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swNewStateString" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The new state of the deal, expressed as a string. This is set by the MarkitWire system.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swTradeAttributeFlags" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Attributes of trades not exposed by the contract state. This is set by the MarkitWire system.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swPrivateProcessState" type="SW_PrivateProcessStateEnum">
<xsd:annotation>
<xsd:documentation xml:lang="en">The private process state associated with the trade. The process state is set by the SwapsWire system and can have values of 'Pending', 'Withdrawn', 'Done' or 'Released'. The states of 'Pending' and 'Withdrawn' are applicable to pre-Done deals only.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swPrivateBookingState" type="xsd:string">
<xsd:annotation>
<xsd:documentation xml:lang="en">A unilateral booking state that can be set by a participant through SwapsWire Tracker or the Deal Sink API when the trade is in a Released state (as indicated by the element swPrivateProcessState containing a value of 'Released'). The values 'Pending', 'Withdrawn', 'Done' and 'Released' mirror those of the element swPrivateProcessState and are reserved values that are set by the SwapsWire system, i.e. it is not possible to set the booking state to these values through SwapsWire Tracker or the Deal Sink API.  Once a trade is in a released state the booking state can be set to a value of 'Received', 'Validated', 'Cleared' or 'Error' (or any other user-defined value to support internal processing) through SwapsWire Tracker or the Deal Sink API.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swPrivateStateComment" type="xsd:string" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">A unilateral free format string literal that can be set by a participant through SwapsWire Tracker or the Deal Sink API to provide a further description of a trade's booking state. For example, for a booking state of 'Error' this element could be set to contain an appropriate error string.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swPrivateDealSinkConfirmation" type="xsd:string" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">A unilateral Deal Sink API confirmation indicator. This provides a participant with a mechanism to mark a trade version as having been received. The recommended string value to set in this field is 'Received'. This element will not be present until a participant has changed its initial null value through a Deal Sink API update.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swPrivateTradeId" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The trade identifier allocated internally by the participant. This is the internal identifier that will be passed to a clearance system, e.g. LCH.Clearnet SwapClear.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swTradingBookId" type="xsd:normalizedString">
<xsd:annotation>
<xsd:documentation xml:lang="en">The data captured through the SwapsWire Trader field labeled Book or set via the Deal Sink API or Dealer API.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swBrokerPartyId" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The data captured through the SwapsWire Trader field labeled Broker or, for a trade sent by a broker through the BrokerLoad API, will be set equal to a broker's SwapsWire broker/location identifier.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swBrokerTradeId" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The trade identifier allocated by a broker.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swBrokerLegId" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The leg identifier allocated by a broker to identify this deal as part of a larger group, e.g. a strategy.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swBrokerageAmount" type="Money" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The brokerage on the trade, expressed as a currency amount, payable to the broker identified in the element swBrokerPartyId.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swBrokerageAmount2" type="Money" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The brokerage on the trade, expressed as a currency amount, payable to the broker identified in the element swBrokerPartyId.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swDealerUserName" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The name of the trader that the broker dealt with at the dealer firm. The name will be a valid SwapsWire user name.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swDealerUserName2" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The name of the trader that the broker dealt with at the dealer firm. The name will be a valid SwapsWire user name.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swSalesCredit" type="xsd:decimal" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The data captured through the SwapsWire Trader field labeled Sales Credit or set via the Deal Sink API or Dealer API.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swClearing" type="SW_Clearing" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Data relating to the clearing of this trade through a central clearing house or clearing system, e.g. LCH.Clearnet's SwapClear service. This element will only be present for trades with a product type of 'SingleCurrencyInterestRateSwap' and when the trade version reaches a Done state.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swClearingStatus" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">A free format field which may be updated by the Clearing House to indicate the status of a trade which has gone for processing by the Clearing House.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swNormalisation" type="SW_Normalisation" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Original (pre-normalised) data values for the trade date, effective date and termination date when a swap trade has been normalised as part of a backloading submission to SwapsWire, typically with the aim of backloading through to LCH.Clearnet's SwapClear service.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swBatchId" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The batch identifier associated with the trade. A trade that is submitted to SwapsWire as part of a backloading batch may be allocated a batch identifier by the user to allow searching/filtering of trades based upon this identifier.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swAssociatedFuture" type="SW_AssociatedFuture" minOccurs="0" maxOccurs="4">
<xsd:annotation>
<xsd:documentation xml:lang="en">The batch identifier associated with the trade. A trade that is submitted to SwapsWire as part of a backloading batch may be allocated a batch identifier by the user to allow searching/filtering of trades based upon this identifier.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swAdditionalField" type="SW_AdditionalField" minOccurs="0" maxOccurs="80">
<xsd:annotation>
<xsd:documentation xml:lang="en">The data captured through the SwapsWire Trader fields labeled Additional Field 1-80 (or the custom labels chosen by a participant). The element carries a sequence attribute which will have values '1' through '80' to indicate the particular screen field where the data was captured. A fieldName attribute will have a value set equal to the SwapsWire Trader field's screen label.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swSwapBook" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Private data specific to a physical exercised swaption, used as book id for an automatically created swap. </xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swCreditDefaultSwap" type="SW_CreditDefaultSwap" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Private data specific to the CDS product type, primarily the internal reference entity and reference obligation paired up with the bilateral reference information. This element will only be present for a CDS product type.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swInterOpTradeId" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Private data field containing the Buy Side DerivSERV internal trade ID, which is recorded when the trade is matched on DerivSERV in the first instance. </xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swOtherPartyInterOpTradeId" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Private data field that will be used by the Buy Side to record the Sell Side DerivSERV internal trade ID on interoperable trades. </xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swInterOpSupplementId" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">Private data field that is only visible and only editable by the outgoing party in an interoperable novation. </xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swClearIfEligible" type="xsd:boolean" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">A true/false flag only used for CDS Index and CDS Matrix trades to indicate whether the trade should be cleared through a central clearing house or clearing system.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swNovationExecutionTradeId" type="xsd:normalizedString" minOccurs="0" maxOccurs="1">
<xsd:annotation>
<xsd:documentation xml:lang="en">This Id represents MarkitWire ID for  Novation Execution Trade.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="id" type="xsd:ID"/>
</xsd:complexType>
<xsd:complexType name="SW_PrivateReferenceInformation">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component to define the internal reference entity and reference obligation information.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swPrivateReferenceInformationSource" type="xsd:normalizedString">
<xsd:annotation>
<xsd:documentation xml:lang="en">The source of the internal reference entity and reference obligation data for the credit default swap, i.e. the source for the reference information contained within the private data component of the SWML document.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="referenceEntity" type="LegalEntity">
<xsd:annotation>
<xsd:documentation xml:lang="en">The corporate or sovereign reference entity identified by a legal name and zero or more identifiers, for example, a market standard identifier or a participant's own internal entity identifier.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="referenceObligation" type="SW_ReferenceObligation" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The underlying reference obligation and information describing the relationship between the reference entity and the obligation, for example, whether the reference entity is the primary obligor or a guarantor of the reference obligation. This element will not be present if there is no internal reference obligation specified.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_ReferenceObligation">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component defining the internal reference obligation and information describing the relationship between the reference entity and the obligation, for example, whether the reference entity is the primary obligor or a guarantor of the reference obligation.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="bond" type="SW_Bond">
<xsd:annotation>
<xsd:documentation xml:lang="en">Details to uniquely identify the reference obligation including the instrument identifiers, coupon rate and maturity date.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:choice minOccurs="0">
<xsd:element name="primaryObligor" type="LegalEntity">
<xsd:annotation>
<xsd:documentation xml:lang="en">The primary obligor of the internal reference obligation. This element will only be present if the internal reference entity is the guarantor of the obligation. In such cases the primary obligor legal entity name may be included within this element if it is present within the internal data source. See the SWML 4.0 Mapping Specification for further details on population of this element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="primaryObligorReference" type="PartyOrTradeSideReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to the internal reference entity defined in the element swPrivateReferenceInformation. This element will only be present if the internal reference entity is the primary obligor of the internal reference obligation. See the SWML 4.0 Mapping Specification for further details on population of this element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:choice>
<xsd:element name="guarantorReference" type="PartyOrTradeSideReference" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to the internal reference entity defined in the element swPrivateReferenceInformation. This element will only be present if the internal reference entity is the guarantor of the internal reference obligation. See the SWML 4.0 Mapping Specification for further details on population of this element.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_Trader">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component for defining information about a SwapsWire Trader user involved in a trade conversation, including information linking them to a specific user group and a participant organization.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swParticipantId" type="SW_ParticipantId">
<xsd:annotation>
<xsd:documentation xml:lang="en">The name of the SwapsWire participant organization that the user belongs to.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="partyReference" type="PartyOrTradeSideReference" minOccurs="0" maxOccurs="unbounded">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a party identifier defined elsewhere in the document. This is an FpML element. The element should only be present for principal users, i.e. those associated with progressing the trade to the most recent 'Done' state.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swUserId" type="SW_UserId" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The user id for the user. This element should only be included for a user that belongs to the participant organization receiving the message, i.e. participants should not be able to see user id information for other organizations.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swUserName" type="xsd:normalizedString" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The name of the user. A free format string. This element should only be included for a user that belongs to the participant organization receiving the message, i.e. participants should not be able to see user name information for other organizations.</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
<xsd:attribute name="id" type="xsd:ID" use="required"/>
</xsd:complexType>
<xsd:complexType name="SW_TraderMessage">
<xsd:annotation>
<xsd:documentation xml:lang="en">A component for defining a message associated with a trade conversation.</xsd:documentation>
</xsd:annotation>
<xsd:sequence>
<xsd:element name="swHubTimestamp" type="xsd:dateTime">
<xsd:annotation>
<xsd:documentation xml:lang="en">The SwapsWire hub timestamp reported in Coordinated Universal Time (UTC).</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swTradeVersionId" type="xsd:nonNegativeInteger">
<xsd:annotation>
<xsd:documentation xml:lang="en">The bilateral trade version identifier allocated by SwapsWire.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swMessageStatus" type="SW_MessageStatusEnum">
<xsd:annotation>
<xsd:documentation xml:lang="en">A message status.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swSenderReference" type="SW_NegotiationPartyReference">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a SwapsWire participant/user defined elsewhere in the document. The entity referenced is the sender of the message.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swReceiverReference" type="SW_NegotiationPartyReference" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">A pointer style reference to a SwapsWire participant/user defined elsewhere in the document. The entity referenced is the receiver of the message.</xsd:documentation>
</xsd:annotation>
</xsd:element>
<xsd:element name="swMessageText" type="xsd:string" minOccurs="0">
<xsd:annotation>
<xsd:documentation xml:lang="en">The message text. Note that if the ampersand character (&amp;) and the left (&lt;) and right (&gt;) angle brackets are entered as part of the message text they will be escaped using the strings "&amp;amp;", "&amp;lt;" and "&amp;gt;" respectively in the character data of the element content (see http://www.w3.org/TR/2000/REC-xml-20001006#syntax for further explanation).</xsd:documentation>
</xsd:annotation>
</xsd:element>
</xsd:sequence>
</xsd:complexType>
<xsd:complexType name="SW_UserId">
<xsd:annotation>
<xsd:documentation xml:lang="en">A code for identification of a SwapsWire user.</xsd:documentation>
</xsd:annotation>
<xsd:simpleContent>
<xsd:extension base="xsd:token">
<xsd:attribute name="swUserIdScheme" type="xsd:anyURI" default="http://www.swapswire.com/spec/2001/user-id-1-0"/>
</xsd:extension>
</xsd:simpleContent>
</xsd:complexType>
</xsd:schema>
